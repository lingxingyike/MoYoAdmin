<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.mapper.TypeMapper">
  <resultMap id="BaseResultMap" type="com.example.demo.model.Type">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="createBy" jdbcType="VARCHAR" property="createBy" />
    <result column="updateBy" jdbcType="VARCHAR" property="updateBy" />
    <result column="createTime" jdbcType="TIMESTAMP" property="createTime" />
    <result column="updateTime" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, name, createBy, updateBy, createTime, updateTime
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from type
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from type
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.example.demo.model.Type">
    insert into type (id, name, createBy,
      updateBy, createTime, updateTime
      )
    values (#{id,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{createBy,jdbcType=VARCHAR},
      #{updateBy,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.model.Type">
    insert into type
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="createBy != null">
        createBy,
      </if>
      <if test="updateBy != null">
        updateBy,
      </if>
      <if test="createTime != null">
        createTime,
      </if>
      <if test="updateTime != null">
        updateTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="updateBy != null">
        #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.model.Type">
    update type
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="createBy != null">
        createBy = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="updateBy != null">
        updateBy = #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        createTime = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        updateTime = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.model.Type">
    update type
    set name = #{name,jdbcType=VARCHAR},
      createBy = #{createBy,jdbcType=VARCHAR},
      updateBy = #{updateBy,jdbcType=VARCHAR},
      createTime = #{createTime,jdbcType=TIMESTAMP},
      updateTime = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>


  <!--新增的-->

  <sql id="selectTypeVo">
        select id, name,createBy,updateBy,createTime,updateTime
        from type
    </sql>

  <select id="selectTypeList" parameterType="com.example.demo.model.Type" resultMap="BaseResultMap">
    <include refid="selectTypeVo"/>
    <where>
      <if test="name != null and name != ''">
        AND name like concat('%', #{name}, '%')
      </if>
    </where>
  </select>

  <select id="selectTypeAll" resultMap="BaseResultMap">
    <include refid="selectTypeVo"/>
  </select>

  <select id="selectTypeById" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <include refid="selectTypeVo"/>
    where id = #{id}
  </select>

  <select id="selectTypeListById" parameterType="java.lang.Long" resultType="java.lang.Long">
        select id
        from type
        where id = #{id}
    </select>

  <select id="selectTypesByName" parameterType="java.lang.String" resultMap="BaseResultMap">
        select id, name,createBy,updateBy,createTime,updateTime
        from type
        where name = #{name}
    </select>

  <select id="checkTypeNameUnique" parameterType="java.lang.String" resultMap="BaseResultMap">
    <include refid="selectTypeVo"/>
    where name=#{name} limit 1
  </select>

  <update id="updateType" parameterType="com.example.demo.model.Type">
    update type
    <set>
      <if test="name != null and name != ''">name = #{name},</if>
      <if test="updateBy != null and updateBy != ''">updateBy = #{updateBy},</if>
      updateTime = sysdate()
    </set>
    where id = #{id}
  </update>

  <insert id="insertType" parameterType="com.example.demo.model.Type" useGeneratedKeys="true" keyProperty="id">
    insert into type(
    <if test="id != null and id != 0">id,</if>
    <if test="name != null and name != ''">name,</if>
    <if test="createBy != null and createBy != ''">createBy,</if>
    createTime
    )values(
    <if test="id != null and id != 0">#{id},</if>
    <if test="name != null and name != ''">#{name},</if>
    <if test="createBy != null and createBy != ''">#{createBy},</if>
    sysdate()
    )
  </insert>

  <delete id="deleteTypeById" parameterType="java.lang.Long">
        delete from type where id = #{id}
    </delete>

  <delete id="deleteTypeByIds" parameterType="java.lang.Long">
    delete from type where id in
    <foreach collection="array" item="id" open="(" separator="," close=")">
      #{id}
    </foreach>
  </delete>
</mapper>