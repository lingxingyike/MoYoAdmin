<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.mapper.SysUserMapper">
  <resultMap id="BaseResultMap" type="com.example.demo.common.core.domain.SysUser">
    <id column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="dept_id" jdbcType="BIGINT" property="deptId" />
    <result column="user_name" jdbcType="VARCHAR" property="username" />
    <result column="nick_name" jdbcType="VARCHAR" property="nickName" />
    <result column="user_type" jdbcType="VARCHAR" property="userType" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="phonenumber" jdbcType="VARCHAR" property="phonenumber" />
    <result column="sex" jdbcType="CHAR" property="sex" />
    <result column="avatar" jdbcType="VARCHAR" property="avatar" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="status" jdbcType="CHAR" property="status" />
    <result column="del_flag" jdbcType="CHAR" property="delFlag" />
    <result column="login_ip" jdbcType="VARCHAR" property="loginIp" />
    <result column="login_date" jdbcType="TIMESTAMP" property="loginDate" />
    <result column="create_by" jdbcType="VARCHAR" property="createBy" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_by" jdbcType="VARCHAR" property="updateBy" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>
  <sql id="Base_Column_List">
    user_id, dept_id, user_name, nick_name, user_type, email, phonenumber, sex, avatar, 
    password, status, del_flag, login_ip, login_date, create_by, create_time, update_by, 
    update_time, remark
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sys_user
    where user_id = #{userId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from sys_user
    where user_id = #{userId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.example.demo.common.core.domain.SysUser">
    insert into sys_user (user_id, dept_id, user_name, 
      nick_name, user_type, email, 
      phonenumber, sex, avatar, 
      password, status, del_flag, 
      login_ip, login_date, create_by, 
      create_time, update_by, update_time, 
      remark)
    values (#{userId,jdbcType=BIGINT}, #{deptId,jdbcType=BIGINT}, #{username,jdbcType=VARCHAR},
      #{nickName,jdbcType=VARCHAR}, #{userType,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{phonenumber,jdbcType=VARCHAR}, #{sex,jdbcType=CHAR}, #{avatar,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{status,jdbcType=CHAR}, #{delFlag,jdbcType=CHAR}, 
      #{loginIp,jdbcType=VARCHAR}, #{loginDate,jdbcType=TIMESTAMP}, #{createBy,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateBy,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{remark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.common.core.domain.SysUser">
    insert into sys_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="deptId != null">
        dept_id,
      </if>
      <if test="username != null">
        user_name,
      </if>
      <if test="nickName != null">
        nick_name,
      </if>
      <if test="userType != null">
        user_type,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="phonenumber != null">
        phonenumber,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="avatar != null">
        avatar,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="delFlag != null">
        del_flag,
      </if>
      <if test="loginIp != null">
        login_ip,
      </if>
      <if test="loginDate != null">
        login_date,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateBy != null">
        update_by,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="deptId != null">
        #{deptId,jdbcType=BIGINT},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null">
        #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="userType != null">
        #{userType,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="phonenumber != null">
        #{phonenumber,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=CHAR},
      </if>
      <if test="avatar != null">
        #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=CHAR},
      </if>
      <if test="delFlag != null">
        #{delFlag,jdbcType=CHAR},
      </if>
      <if test="loginIp != null">
        #{loginIp,jdbcType=VARCHAR},
      </if>
      <if test="loginDate != null">
        #{loginDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.common.core.domain.SysUser">
    update sys_user
    <set>
      <if test="deptId != null">
        dept_id = #{deptId,jdbcType=BIGINT},
      </if>
      <if test="username != null">
        user_name = #{username,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null">
        nick_name = #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="userType != null">
        user_type = #{userType,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="phonenumber != null">
        phonenumber = #{phonenumber,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=CHAR},
      </if>
      <if test="avatar != null">
        avatar = #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=CHAR},
      </if>
      <if test="delFlag != null">
        del_flag = #{delFlag,jdbcType=CHAR},
      </if>
      <if test="loginIp != null">
        login_ip = #{loginIp,jdbcType=VARCHAR},
      </if>
      <if test="loginDate != null">
        login_date = #{loginDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null">
        create_by = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        update_by = #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where user_id = #{userId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.common.core.domain.SysUser">
    update sys_user
    set dept_id = #{deptId,jdbcType=BIGINT},
      user_name = #{username,jdbcType=VARCHAR},
      nick_name = #{nickName,jdbcType=VARCHAR},
      user_type = #{userType,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      phonenumber = #{phonenumber,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=CHAR},
      avatar = #{avatar,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      status = #{status,jdbcType=CHAR},
      del_flag = #{delFlag,jdbcType=CHAR},
      login_ip = #{loginIp,jdbcType=VARCHAR},
      login_date = #{loginDate,jdbcType=TIMESTAMP},
      create_by = #{createBy,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_by = #{updateBy,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      remark = #{remark,jdbcType=VARCHAR}
    where user_id = #{userId,jdbcType=BIGINT}
  </update>
  <!--新增的-->

  <resultMap type="com.example.demo.common.core.domain.SysUser" id="SysUserResult">
    <id     property="userId"       column="user_id"      />
    <result property="deptId"       column="dept_id"      />
    <result property="username"     column="user_name"    />
    <result property="nickName"     column="nick_name"    />
    <result property="email"        column="email"        />
    <result property="phonenumber"  column="phonenumber"  />
    <result property="sex"          column="sex"          />
    <result property="avatar"       column="avatar"       />
    <result property="password"     column="password"     />
    <result property="status"       column="status"       />
    <result property="delFlag"      column="del_flag"     />
    <result property="loginIp"      column="login_ip"     />
    <result property="loginDate"    column="login_date"   />
    <result property="createBy"     column="create_by"    />
    <result property="createTime"   column="create_time"  />
    <result property="updateBy"     column="update_by"    />
    <result property="updateTime"   column="update_time"  />
    <result property="remark"       column="remark"       />
    <association property="dept"    column="dept_id" javaType="com.example.demo.common.core.domain.SysDept" resultMap="deptResult" />
    <collection  property="roles"   javaType="java.util.List"           resultMap="RoleResult" />
  </resultMap>

  <resultMap id="deptResult" type="com.example.demo.common.core.domain.SysDept">
    <id     property="deptId"    column="dept_id"     />
    <result property="parentId"  column="parent_id"   />
    <result property="deptName"  column="dept_name"   />
    <result property="ancestors" column="ancestors"   />
    <result property="orderNum"  column="order_num"   />
    <result property="leader"    column="leader"      />
    <result property="status"    column="dept_status" />
  </resultMap>

  <resultMap id="RoleResult" type="com.example.demo.common.core.domain.SysRole">
    <id     property="roleId"       column="role_id"        />
    <result property="roleName"     column="role_name"      />
    <result property="roleKey"      column="role_key"       />
    <result property="roleSort"     column="role_sort"      />
    <result property="dataScope"     column="data_scope"    />
    <result property="status"       column="role_status"    />
  </resultMap>

  <sql id="selectUserVo">
        select u.user_id, u.dept_id, u.user_name, u.nick_name, u.email, u.avatar, u.phonenumber, u.password, u.sex, u.status, u.del_flag, u.login_ip, u.login_date, u.create_by, u.create_time, u.remark,
        d.dept_id, d.parent_id, d.ancestors, d.dept_name, d.order_num, d.leader, d.status as dept_status,
        r.role_id, r.role_name, r.role_key, r.role_sort, r.data_scope, r.status as role_status
        from sys_user u
		    left join sys_dept d on u.dept_id = d.dept_id
		    left join sys_user_role ur on u.user_id = ur.user_id
		    left join sys_role r on r.role_id = ur.role_id
    </sql>

  <select id="selectUserList" parameterType="com.example.demo.common.core.domain.SysUser" resultMap="SysUserResult">
    select u.user_id, u.dept_id, u.nick_name, u.user_name, u.email, u.avatar, u.phonenumber, u.sex, u.status, u.del_flag, u.login_ip, u.login_date, u.create_by, u.create_time, u.remark, d.dept_name, d.leader from sys_user u
    left join sys_dept d on u.dept_id = d.dept_id
    where u.del_flag = '0'
    <if test="userId != null and userId != 0">
      AND u.user_id = #{userId}
    </if>
    <if test="username != null and username != ''">
      AND u.user_name like concat('%', #{username}, '%')
    </if>
    <if test="status != null and status != ''">
      AND u.status = #{status}
    </if>
    <if test="phonenumber != null and phonenumber != ''">
      AND u.phonenumber like concat('%', #{phonenumber}, '%')
    </if>
    <if test="params.beginTime != null and params.beginTime != ''"><!-- 开始时间检索 -->
      AND date_format(u.create_time,'%y%m%d') &gt;= date_format(#{params.beginTime},'%y%m%d')
    </if>
    <if test="params.endTime != null and params.endTime != ''"><!-- 结束时间检索 -->
      AND date_format(u.create_time,'%y%m%d') &lt;= date_format(#{params.endTime},'%y%m%d')
    </if>
    <if test="deptId != null and deptId != 0">
      AND (u.dept_id = #{deptId} OR u.dept_id IN ( SELECT t.dept_id FROM sys_dept t WHERE find_in_set(#{deptId}, ancestors) ))
    </if>
    <!-- 数据范围过滤 -->
    ${params.dataScope}
  </select>

  <select id="selectAllocatedList" parameterType="com.example.demo.common.core.domain.SysUser" resultMap="SysUserResult">
    select distinct u.user_id, u.dept_id, u.user_name, u.nick_name, u.email, u.phonenumber, u.status, u.create_time
    from sys_user u
    left join sys_dept d on u.dept_id = d.dept_id
    left join sys_user_role ur on u.user_id = ur.user_id
    left join sys_role r on r.role_id = ur.role_id
    where u.del_flag = '0' and r.role_id = #{roleId}
    <if test="username != null and username != ''">
      AND u.user_name like concat('%', #{username}, '%')
    </if>
    <if test="phonenumber != null and phonenumber != ''">
      AND u.phonenumber like concat('%', #{phonenumber}, '%')
    </if>
    <!-- 数据范围过滤 -->
    ${params.dataScope}
  </select>

  <select id="selectUnallocatedList" parameterType="com.example.demo.common.core.domain.SysUser" resultMap="SysUserResult">
    select distinct u.user_id, u.dept_id, u.user_name, u.nick_name, u.email, u.phonenumber, u.status, u.create_time
    from sys_user u
    left join sys_dept d on u.dept_id = d.dept_id
    left join sys_user_role ur on u.user_id = ur.user_id
    left join sys_role r on r.role_id = ur.role_id
    where u.del_flag = '0' and (r.role_id != #{roleId} or r.role_id IS NULL)
    and u.user_id not in (select u.user_id from sys_user u inner join sys_user_role ur on u.user_id = ur.user_id and ur.role_id = #{roleId})
    <if test="username != null and username != ''">
      AND u.user_name like concat('%', #{username}, '%')
    </if>
    <if test="phonenumber != null and phonenumber != ''">
      AND u.phonenumber like concat('%', #{phonenumber}, '%')
    </if>
    <!-- 数据范围过滤 -->
    ${params.dataScope}
  </select>

  <select id="selectUserByUserName" parameterType="java.lang.String" resultMap="SysUserResult">
    <include refid="selectUserVo"/>
    where u.user_name = #{username}
  </select>

  <select id="selectUserById" parameterType="java.lang.Long" resultMap="SysUserResult">
    <include refid="selectUserVo"/>
    where u.user_id = #{userId}
  </select>

  <select id="checkUserNameUnique" parameterType="java.lang.String" resultType="java.lang.Integer">
		select count(1) from sys_user where user_name = #{username} limit 1
	</select>

  <select id="checkPhoneUnique" parameterType="java.lang.String" resultMap="SysUserResult">
		select user_id, phonenumber from sys_user where phonenumber = #{phonenumber} limit 1
	</select>

  <select id="checkEmailUnique" parameterType="java.lang.String" resultMap="SysUserResult">
		select user_id, email from sys_user where email = #{email} limit 1
	</select>

  <insert id="insertUser" parameterType="com.example.demo.common.core.domain.SysUser" useGeneratedKeys="true" keyProperty="userId">
    insert into sys_user(
    <if test="userId != null and userId != 0">user_id,</if>
    <if test="deptId != null and deptId != 0">dept_id,</if>
    <if test="username != null and username != ''">user_name,</if>
    <if test="nickName != null and nickName != ''">nick_name,</if>
    <if test="email != null and email != ''">email,</if>
    <if test="avatar != null and avatar != ''">avatar,</if>
    <if test="phonenumber != null and phonenumber != ''">phonenumber,</if>
    <if test="sex != null and sex != ''">sex,</if>
    <if test="password != null and password != ''">password,</if>
    <if test="status != null and status != ''">status,</if>
    <if test="createBy != null and createBy != ''">create_by,</if>
    <if test="remark != null and remark != ''">remark,</if>
    create_time
    )values(
    <if test="userId != null and userId != ''">#{userId},</if>
    <if test="deptId != null and deptId != ''">#{deptId},</if>
    <if test="username != null and username != ''">#{username},</if>
    <if test="nickName != null and nickName != ''">#{nickName},</if>
    <if test="email != null and email != ''">#{email},</if>
    <if test="avatar != null and avatar != ''">#{avatar},</if>
    <if test="phonenumber != null and phonenumber != ''">#{phonenumber},</if>
    <if test="sex != null and sex != ''">#{sex},</if>
    <if test="password != null and password != ''">#{password},</if>
    <if test="status != null and status != ''">#{status},</if>
    <if test="createBy != null and createBy != ''">#{createBy},</if>
    <if test="remark != null and remark != ''">#{remark},</if>
    sysdate()
    )
  </insert>

  <update id="updateUser" parameterType="com.example.demo.common.core.domain.SysUser">
    update sys_user
    <set>
      <if test="deptId != null and deptId != 0">dept_id = #{deptId},</if>
      <if test="username != null and username != ''">user_name = #{username},</if>
      <if test="nickName != null and nickName != ''">nick_name = #{nickName},</if>
      <if test="email != null ">email = #{email},</if>
      <if test="phonenumber != null ">phonenumber = #{phonenumber},</if>
      <if test="sex != null and sex != ''">sex = #{sex},</if>
      <if test="avatar != null and avatar != ''">avatar = #{avatar},</if>
      <if test="password != null and password != ''">password = #{password},</if>
      <if test="status != null and status != ''">status = #{status},</if>
      <if test="loginIp != null and loginIp != ''">login_ip = #{loginIp},</if>
      <if test="loginDate != null">login_date = #{loginDate},</if>
      <if test="updateBy != null and updateBy != ''">update_by = #{updateBy},</if>
      <if test="remark != null">remark = #{remark},</if>
      update_time = sysdate()
    </set>
    where user_id = #{userId}
  </update>

  <update id="updateUserStatus" parameterType="com.example.demo.common.core.domain.SysUser">
 		update sys_user set status = #{status} where user_id = #{userId}
	</update>

  <update id="updateUserAvatar" parameterType="com.example.demo.common.core.domain.SysUser">
 		update sys_user set avatar = #{avatar} where user_name = #{username}
	</update>

  <update id="resetUserPwd" parameterType="com.example.demo.common.core.domain.SysUser">
 		update sys_user set password = #{password} where user_name = #{username}
	</update>

  <delete id="deleteUserById" parameterType="java.lang.Long">
		update sys_user set del_flag = '2' where user_id = #{userId}
 	</delete>

  <delete id="deleteUserByIds" parameterType="java.lang.Long">
    update sys_user set del_flag = '2' where user_id in
    <foreach collection="array" item="userId" open="(" separator="," close=")">
      #{userId}
    </foreach>
  </delete>
</mapper>