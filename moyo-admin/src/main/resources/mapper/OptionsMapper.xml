<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.mapper.OptionsMapper">
  <resultMap id="BaseResultMap" type="com.example.demo.model.Options">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="questionId" jdbcType="BIGINT" property="questionId" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="isAnswer" jdbcType="INTEGER" property="isAnswer" />
    <result column="sequence" jdbcType="INTEGER" property="sequence" />
    <result column="createBy" jdbcType="VARCHAR" property="createBy" />
    <result column="updateBy" jdbcType="VARCHAR" property="updateBy" />
    <result column="createTime" jdbcType="TIMESTAMP" property="createTime" />
    <result column="updateTime" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, questionId, content, isAnswer, sequence, createBy, updateBy, createTime, updateTime
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from options
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from options
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.example.demo.model.Options">
    insert into options (id, questionId, content,
      isAnswer, sequence, createBy,
      updateBy, createTime, updateTime
      )
    values (#{id,jdbcType=BIGINT}, #{questionId,jdbcType=BIGINT}, #{content,jdbcType=VARCHAR},
      #{isAnswer,jdbcType=INTEGER}, #{sequence,jdbcType=INTEGER}, #{createBy,jdbcType=VARCHAR},
      #{updateBy,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.model.Options">
    insert into options
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="questionId != null">
        questionId,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="isAnswer != null">
        isAnswer,
      </if>
      <if test="sequence != null">
        sequence,
      </if>
      <if test="createBy != null">
        createBy,
      </if>
      <if test="updateBy != null">
        updateBy,
      </if>
      <if test="createTime != null">
        createTime,
      </if>
      <if test="updateTime != null">
        updateTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="questionId != null">
        #{questionId,jdbcType=BIGINT},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="isAnswer != null">
        #{isAnswer,jdbcType=INTEGER},
      </if>
      <if test="sequence != null">
        #{sequence,jdbcType=INTEGER},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="updateBy != null">
        #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.model.Options">
    update options
    <set>
      <if test="questionId != null">
        questionId = #{questionId,jdbcType=BIGINT},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="isAnswer != null">
        isAnswer = #{isAnswer,jdbcType=INTEGER},
      </if>
      <if test="sequence != null">
        sequence = #{sequence,jdbcType=INTEGER},
      </if>
      <if test="createBy != null">
        createBy = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="updateBy != null">
        updateBy = #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        createTime = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        updateTime = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.model.Options">
    update options
    set questionId = #{questionId,jdbcType=BIGINT},
      content = #{content,jdbcType=VARCHAR},
      isAnswer = #{isAnswer,jdbcType=INTEGER},
      sequence = #{sequence,jdbcType=INTEGER},
      createBy = #{createBy,jdbcType=VARCHAR},
      updateBy = #{updateBy,jdbcType=VARCHAR},
      createTime = #{createTime,jdbcType=TIMESTAMP},
      updateTime = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <!--新增的-->

  <sql id="selectOptionsVo">
        select id, questionId,content,isAnswer,sequence,createBy,updateBy,createTime,updateTime
        from options
    </sql>

  <select id="selectOptionsList" parameterType="com.example.demo.model.Options" resultMap="BaseResultMap">
    <include refid="selectOptionsVo"/>
    <where>
      <if test="questionId != null and questionId != ''">
        AND questionId = #{questionId}
      </if>
      <if test="isAnswer != null and isAnswer != ''">
        AND isAnswer = #{isAnswer}
      </if>
      <if test="sequence != null and sequence != ''">
        AND license = #{sequence}
      </if>
      <if test="content != null and content != ''">
        AND content like concat('%', #{content}, '%')
      </if>
    </where>
  </select>

  <select id="selectOptionsAll" resultMap="BaseResultMap">
    <include refid="selectOptionsVo"/>
  </select>

  <select id="selectOptionsById" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <include refid="selectOptionsVo"/>
    where id = #{id}
  </select>

  <select id="selectOptionsListById" parameterType="java.lang.Long" resultType="java.lang.Long">
        select id
        from options
        where id = #{id}
    </select>

  <select id="selectOptionsByContent" parameterType="java.lang.String" resultMap="BaseResultMap">
        select id, questionId,content,isAnswer,sequence,createBy,updateBy,createTime,updateTime
        from options
        where content = #{content}
    </select>

  <select id="checkOptionsContentUnique" parameterType="java.lang.String" resultMap="BaseResultMap">
    <include refid="selectOptionsVo"/>
    where content=#{content} limit 1
  </select>

  <update id="updateOptions" parameterType="com.example.demo.model.Options">
    update options
    <set>
      <if test="questionId != null and questionId != ''">questionId = #{questionId},</if>
      <if test="content != null and content != ''">content = #{content},</if>
      <if test="isAnswer != null">isAnswer = #{isAnswer},</if>
      <if test="sequence != null ">sequence = #{sequence},</if>
      <if test="updateBy != null and updateBy != ''">updateBy = #{updateBy},</if>
      updateTime = sysdate()
    </set>
    where id = #{id}
  </update>

  <insert id="insertOptions" parameterType="com.example.demo.model.Options" useGeneratedKeys="true" keyProperty="id">
    insert into options(
    <if test="id != null and id != 0">id,</if>
    <if test="questionId != null ">questionId,</if>
    <if test="content != null and content != ''">content,</if>
    <if test="isAnswer != null ">isAnswer,</if>
    <if test="sequence != null ">sequence,</if>
    <if test="createBy != null and createBy != ''">createBy,</if>
    createTime
    )values(
    <if test="id != null and id != 0">#{id},</if>
    <if test="questionId != null">#{questionId},</if>
    <if test="content != null and content != ''">#{content},</if>
    <if test="isAnswer != null">#{isAnswer},</if>
    <if test="sequence != null ">#{sequence},</if>
    <if test="createBy != null and createBy != ''">#{createBy},</if>
    sysdate()
    )
  </insert>

  <delete id="deleteOptionsById" parameterType="java.lang.Long">
        delete from options where id = #{id}
    </delete>

  <delete id="deleteOptionsByIds" parameterType="java.lang.Long">
    delete from options where id in
    <foreach collection="array" item="id" open="(" separator="," close=")">
      #{id}
    </foreach>
  </delete>

  <select id="countOptionsByOptionsId" resultType="java.lang.Integer">
        select count(1) from options where questionId=#{questionId}
    </select>

</mapper>