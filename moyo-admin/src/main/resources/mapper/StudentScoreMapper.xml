<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.mapper.StudentScoreMapper">
  <resultMap id="BaseResultMap" type="com.example.demo.model.StudentScore">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="studentId" jdbcType="BIGINT" property="studentId" />
    <result column="studentName" jdbcType="VARCHAR" property="studentName" />
    <result column="level" jdbcType="INTEGER" property="level" />
    <result column="license" jdbcType="INTEGER" property="license" />
    <result column="score" jdbcType="INTEGER" property="score" />
    <result column="createBy" jdbcType="VARCHAR" property="createBy" />
    <result column="updateBy" jdbcType="VARCHAR" property="updateBy" />
    <result column="createTime" jdbcType="TIMESTAMP" property="createTime" />
    <result column="updateTime" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, studentId, level, license, score, createBy, updateBy, createTime, updateTime
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from studentscore
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from studentscore
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.example.demo.model.StudentScore">
    insert into studentscore (id, studentId, level, 
      license, score, createBy,
      updateBy, createTime, updateTime
      )
    values (#{id,jdbcType=BIGINT}, #{studentId,jdbcType=BIGINT}, #{level,jdbcType=INTEGER},
      #{license,jdbcType=INTEGER}, #{score,jdbcType=INTEGER}, #{createBy,jdbcType=VARCHAR},
      #{updateBy,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.model.StudentScore">
    insert into studentscore
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="studentId != null">
        studentId,
      </if>
      <if test="level != null">
        level,
      </if>
      <if test="license != null">
        license,
      </if>
      <if test="score != null">
        score,
      </if>
      <if test="createBy != null">
        createBy,
      </if>
      <if test="updateBy != null">
        updateBy,
      </if>
      <if test="createTime != null">
        createTime,
      </if>
      <if test="updateTime != null">
        updateTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="studentId != null">
        #{studentId,jdbcType=BIGINT},
      </if>
      <if test="level != null">
        #{level,jdbcType=INTEGER},
      </if>
      <if test="license != null">
        #{license,jdbcType=INTEGER},
      </if>
      <if test="score != null">
        #{score,jdbcType=INTEGER},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="updateBy != null">
        #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.model.StudentScore">
    update studentscore
    <set>
      <if test="studentId != null">
        studentId = #{studentId,jdbcType=BIGINT},
      </if>
      <if test="level != null">
        level = #{level,jdbcType=INTEGER},
      </if>
      <if test="license != null">
        license = #{license,jdbcType=INTEGER},
      </if>
      <if test="score != null">
        score = #{score,jdbcType=INTEGER},
      </if>
      <if test="createBy != null">
        createBy = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="updateBy != null">
        updateBy = #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        createTime = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        updateTime = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.model.StudentScore">
    update studentscore
    set studentId = #{studentId,jdbcType=BIGINT},
      level = #{level,jdbcType=INTEGER},
      license = #{license,jdbcType=INTEGER},
      score = #{score,jdbcType=INTEGER},
      createBy = #{createBy,jdbcType=VARCHAR},
      updateBy = #{updateBy,jdbcType=VARCHAR},
      createTime = #{createTime,jdbcType=TIMESTAMP},
      updateTime = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <!--新增的-->
  <select id="countStudentScoreById" resultType="java.lang.Integer">
        select count(1) from studentScore where studentId=#{studentId}
    </select>


  <!--新增的-->

  <sql id="selectStudentScoreVo">
        select s.id, s.studentId,s.level,s.license,s.score,s.createBy,s.updateBy,s.createTime,s.updateTime,d.studentName
        from studentScore s
        left join studentDetail d on d.studentId= s.studentId
    </sql>

  <select id="selectStudentScoreList" parameterType="com.example.demo.model.StudentScore" resultMap="BaseResultMap">
    <include refid="selectStudentScoreVo"/>
    <where>
      <if test="level != null and level != ''">
        AND level = #{level}
      </if>
      <if test="license != null and license != ''">
        AND license = #{license}
      </if>
    </where>
  </select>

  <select id="selectStudentScoreAll" resultMap="BaseResultMap">
    <include refid="selectStudentScoreVo"/>
  </select>

  <select id="selectStudentScoreById" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <include refid="selectStudentScoreVo"/>
    where id = #{id}
  </select>

  <select id="selectStudentScoreListById" parameterType="java.lang.Long" resultType="java.lang.Long">
        select id
        from studentScore
        where id = #{id}
    </select>

  <select id="selectStudentScoresByStudentId" parameterType="java.lang.String" resultMap="BaseResultMap">
        select s.id, s.studentId,s.level,s.license,s.score,s.createBy,s.updateBy,s.createTime,s.updateTime,d.studentName
        from studentScore s
        left join studentDetail d on d.studentId= s.studentId
        where s.studentId = #{studentId}
    </select>

  <update id="updateStudentScore" parameterType="com.example.demo.model.StudentScore">
    update studentScore
    <set>
      <if test="studentId != null and studentId != ''">studentId = #{studentId},</if>
      <if test="level != null and level != ''">level = #{level},</if>
      <if test="license != null and license != ''">license = #{license},</if>
      <if test="score != null and score != ''">score = #{score},</if>
      <if test="updateBy != null and updateBy != ''">updateBy = #{updateBy},</if>
      updateTime = sysdate()
    </set>
    where id = #{id}
  </update>

  <insert id="insertStudentScore" parameterType="com.example.demo.model.StudentScore" useGeneratedKeys="true" keyProperty="id">
    insert into studentScore(
    <if test="id != null and id != 0">id,</if>
    <if test="studentId != null and studentId != ''">studentId,</if>
    <if test="level != null and level != ''">level,</if>
    <if test="license != null and license != ''">license,</if>
    <if test="score != null and score != ''">score,</if>
    <if test="createBy != null and createBy != ''">createBy,</if>
    createTime
    )values(
    <if test="id != null and id != 0">#{id},</if>
    <if test="studentId != null and studentId != ''">#{studentId},</if>
    <if test="level != null and level != ''">#{level},</if>
    <if test="license != null and license != ''">#{license},</if>
    <if test="score != null and score != ''">#{score},</if>
    <if test="createBy != null and createBy != ''">#{createBy},</if>
    sysdate()
    )
  </insert>

  <delete id="deleteStudentScoreById" parameterType="java.lang.Long">
        delete from studentScore where id = #{id}
    </delete>

  <delete id="deleteStudentScoreByIds" parameterType="java.lang.Long">
    delete from studentScore where id in
    <foreach collection="array" item="id" open="(" separator="," close=")">
      #{id}
    </foreach>
  </delete>

  <select id="countStudentScoreByLevelId" resultType="java.lang.Integer">
        select count(1) from studentScore where level=#{level}
    </select>

  <select id="countStudentScoreByLicenseId" resultType="java.lang.Integer">
        select count(1) from studentScore where license=#{license}
    </select>
</mapper>