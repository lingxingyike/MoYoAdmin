<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.mapper.SysMenuMapper">
  <resultMap id="BaseResultMap" type="com.example.demo.common.core.domain.SysMenu">
    <id column="menu_id" jdbcType="BIGINT" property="menuId" />
    <result column="menu_name" jdbcType="VARCHAR" property="menuName" />
    <result column="parent_id" jdbcType="BIGINT" property="parentId" />
    <result column="order_num" jdbcType="INTEGER" property="orderNum" />
    <result column="path" jdbcType="VARCHAR" property="path" />
    <result column="component" jdbcType="VARCHAR" property="component" />
    <result column="query" jdbcType="VARCHAR" property="query" />
    <result column="is_frame" jdbcType="INTEGER" property="isFrame" />
    <result column="is_cache" jdbcType="INTEGER" property="isCache" />
    <result column="menu_type" jdbcType="CHAR" property="menuType" />
    <result column="visible" jdbcType="CHAR" property="visible" />
    <result column="status" jdbcType="CHAR" property="status" />
    <result column="perms" jdbcType="VARCHAR" property="perms" />
    <result column="icon" jdbcType="VARCHAR" property="icon" />
    <result column="create_by" jdbcType="VARCHAR" property="createBy" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_by" jdbcType="VARCHAR" property="updateBy" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>
  <sql id="Base_Column_List">
    menu_id, menu_name, parent_id, order_num, path, component, query, is_frame, is_cache, 
    menu_type, visible, status, perms, icon, create_by, create_time, update_by, update_time, 
    remark
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sys_menu
    where menu_id = #{menuId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from sys_menu
    where menu_id = #{menuId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.example.demo.common.core.domain.SysMenu">
    insert into sys_menu (menu_id, menu_name, parent_id, 
      order_num, path, component, 
      query, is_frame, is_cache, 
      menu_type, visible, status, perms, 
      icon, create_by, create_time, 
      update_by, update_time, remark
      )
    values (#{menuId,jdbcType=BIGINT}, #{menuName,jdbcType=VARCHAR}, #{parentId,jdbcType=BIGINT}, 
      #{orderNum,jdbcType=INTEGER}, #{path,jdbcType=VARCHAR}, #{component,jdbcType=VARCHAR}, 
      #{query,jdbcType=VARCHAR}, #{isFrame,jdbcType=INTEGER}, #{isCache,jdbcType=INTEGER}, 
      #{menuType,jdbcType=CHAR}, #{visible,jdbcType=CHAR}, #{status,jdbcType=CHAR}, #{perms,jdbcType=VARCHAR}, 
      #{icon,jdbcType=VARCHAR}, #{createBy,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateBy,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, #{remark,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.common.core.domain.SysMenu">
    insert into sys_menu
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="menuId != null">
        menu_id,
      </if>
      <if test="menuName != null">
        menu_name,
      </if>
      <if test="parentId != null">
        parent_id,
      </if>
      <if test="orderNum != null">
        order_num,
      </if>
      <if test="path != null">
        path,
      </if>
      <if test="component != null">
        component,
      </if>
      <if test="query != null">
        query,
      </if>
      <if test="isFrame != null">
        is_frame,
      </if>
      <if test="isCache != null">
        is_cache,
      </if>
      <if test="menuType != null">
        menu_type,
      </if>
      <if test="visible != null">
        visible,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="perms != null">
        perms,
      </if>
      <if test="icon != null">
        icon,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateBy != null">
        update_by,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="menuId != null">
        #{menuId,jdbcType=BIGINT},
      </if>
      <if test="menuName != null">
        #{menuName,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null">
        #{parentId,jdbcType=BIGINT},
      </if>
      <if test="orderNum != null">
        #{orderNum,jdbcType=INTEGER},
      </if>
      <if test="path != null">
        #{path,jdbcType=VARCHAR},
      </if>
      <if test="component != null">
        #{component,jdbcType=VARCHAR},
      </if>
      <if test="query != null">
        #{query,jdbcType=VARCHAR},
      </if>
      <if test="isFrame != null">
        #{isFrame,jdbcType=INTEGER},
      </if>
      <if test="isCache != null">
        #{isCache,jdbcType=INTEGER},
      </if>
      <if test="menuType != null">
        #{menuType,jdbcType=CHAR},
      </if>
      <if test="visible != null">
        #{visible,jdbcType=CHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=CHAR},
      </if>
      <if test="perms != null">
        #{perms,jdbcType=VARCHAR},
      </if>
      <if test="icon != null">
        #{icon,jdbcType=VARCHAR},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.common.core.domain.SysMenu">
    update sys_menu
    <set>
      <if test="menuName != null">
        menu_name = #{menuName,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null">
        parent_id = #{parentId,jdbcType=BIGINT},
      </if>
      <if test="orderNum != null">
        order_num = #{orderNum,jdbcType=INTEGER},
      </if>
      <if test="path != null">
        path = #{path,jdbcType=VARCHAR},
      </if>
      <if test="component != null">
        component = #{component,jdbcType=VARCHAR},
      </if>
      <if test="query != null">
        query = #{query,jdbcType=VARCHAR},
      </if>
      <if test="isFrame != null">
        is_frame = #{isFrame,jdbcType=INTEGER},
      </if>
      <if test="isCache != null">
        is_cache = #{isCache,jdbcType=INTEGER},
      </if>
      <if test="menuType != null">
        menu_type = #{menuType,jdbcType=CHAR},
      </if>
      <if test="visible != null">
        visible = #{visible,jdbcType=CHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=CHAR},
      </if>
      <if test="perms != null">
        perms = #{perms,jdbcType=VARCHAR},
      </if>
      <if test="icon != null">
        icon = #{icon,jdbcType=VARCHAR},
      </if>
      <if test="createBy != null">
        create_by = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        update_by = #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where menu_id = #{menuId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.common.core.domain.SysMenu">
    update sys_menu
    set menu_name = #{menuName,jdbcType=VARCHAR},
      parent_id = #{parentId,jdbcType=BIGINT},
      order_num = #{orderNum,jdbcType=INTEGER},
      path = #{path,jdbcType=VARCHAR},
      component = #{component,jdbcType=VARCHAR},
      query = #{query,jdbcType=VARCHAR},
      is_frame = #{isFrame,jdbcType=INTEGER},
      is_cache = #{isCache,jdbcType=INTEGER},
      menu_type = #{menuType,jdbcType=CHAR},
      visible = #{visible,jdbcType=CHAR},
      status = #{status,jdbcType=CHAR},
      perms = #{perms,jdbcType=VARCHAR},
      icon = #{icon,jdbcType=VARCHAR},
      create_by = #{createBy,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_by = #{updateBy,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      remark = #{remark,jdbcType=VARCHAR}
    where menu_id = #{menuId,jdbcType=BIGINT}
  </update>
  <!--新增的-->

  <sql id="selectMenuVo">
        select menu_id, menu_name, parent_id, order_num, path, component, `query`, is_frame, is_cache, menu_type, visible, status, ifnull(perms,'') as perms, icon, create_time
		from sys_menu
    </sql>

  <select id="selectMenuList" parameterType="com.example.demo.common.core.domain.SysMenu" resultMap="BaseResultMap">
    <include refid="selectMenuVo"/>
    <where>
      <if test="menuName != null and menuName != ''">
        AND menu_name like concat('%', #{menuName}, '%')
      </if>
      <if test="visible != null and visible != ''">
        AND visible = #{visible}
      </if>
      <if test="status != null and status != ''">
        AND status = #{status}
      </if>
    </where>
    order by parent_id, order_num
  </select>

  <select id="selectMenuTreeAll" resultMap="BaseResultMap">
		select distinct m.menu_id, m.parent_id, m.menu_name, m.path, m.component, m.`query`, m.visible, m.status, ifnull(m.perms,'') as perms, m.is_frame, m.is_cache, m.menu_type, m.icon, m.order_num, m.create_time
		from sys_menu m where m.menu_type in ('M', 'C') and m.status = 0
		order by m.parent_id, m.order_num
	</select>

  <select id="selectMenuListByUserId" parameterType="com.example.demo.common.core.domain.SysMenu" resultMap="BaseResultMap">
    select distinct m.menu_id, m.parent_id, m.menu_name, m.path, m.component, m.`query`, m.visible, m.status, ifnull(m.perms,'') as perms, m.is_frame, m.is_cache, m.menu_type, m.icon, m.order_num, m.create_time
    from sys_menu m
    left join sys_role_menu rm on m.menu_id = rm.menu_id
    left join sys_user_role ur on rm.role_id = ur.role_id
    left join sys_role ro on ur.role_id = ro.role_id
    where ur.user_id = #{params.userId}
    <if test="menuName != null and menuName != ''">
      AND m.menu_name like concat('%', #{menuName}, '%')
    </if>
    <if test="visible != null and visible != ''">
      AND m.visible = #{visible}
    </if>
    <if test="status != null and status != ''">
      AND m.status = #{status}
    </if>
    order by m.parent_id, m.order_num
  </select>

  <select id="selectMenuTreeByUserId" parameterType="java.lang.Long" resultMap="BaseResultMap">
		select distinct m.menu_id, m.parent_id, m.menu_name, m.path, m.component, m.`query`, m.visible, m.status, ifnull(m.perms,'') as perms, m.is_frame, m.is_cache, m.menu_type, m.icon, m.order_num, m.create_time
		from sys_menu m
			 left join sys_role_menu rm on m.menu_id = rm.menu_id
			 left join sys_user_role ur on rm.role_id = ur.role_id
			 left join sys_role ro on ur.role_id = ro.role_id
			 left join sys_user u on ur.user_id = u.user_id
		where u.user_id = #{userId} and m.menu_type in ('M', 'C') and m.status = 0  AND ro.status = 0
		order by m.parent_id, m.order_num
	</select>

  <select id="selectMenuListByRoleId" resultType="java.lang.Long">
    select m.menu_id
    from sys_menu m
    left join sys_role_menu rm on m.menu_id = rm.menu_id
    where rm.role_id = #{roleId}
    <if test="menuCheckStrictly">
      and m.menu_id not in (select m.parent_id from sys_menu m inner join sys_role_menu rm on m.menu_id = rm.menu_id and rm.role_id = #{roleId})
    </if>
    order by m.parent_id, m.order_num
  </select>

  <select id="selectMenuPerms" resultType="java.lang.String">
		select distinct m.perms
		from sys_menu m
			 left join sys_role_menu rm on m.menu_id = rm.menu_id
			 left join sys_user_role ur on rm.role_id = ur.role_id
	</select>

  <select id="selectMenuPermsByUserId" parameterType="java.lang.Long" resultType="java.lang.String">
		select distinct m.perms
		from sys_menu m
			 left join sys_role_menu rm on m.menu_id = rm.menu_id
			 left join sys_user_role ur on rm.role_id = ur.role_id
			 left join sys_role r on r.role_id = ur.role_id
		where m.status = '0' and r.status = '0' and ur.user_id = #{userId}
	</select>

  <select id="selectMenuById" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <include refid="selectMenuVo"/>
    where menu_id = #{menuId}
  </select>

  <select id="hasChildByMenuId" resultType="java.lang.Integer">
	    select count(1) from sys_menu where parent_id = #{menuId}
	</select>

  <select id="checkMenuNameUnique" parameterType="com.example.demo.common.core.domain.SysMenu" resultMap="BaseResultMap">
    <include refid="selectMenuVo"/>
    where menu_name=#{menuName} and parent_id = #{parentId} limit 1
  </select>

  <update id="updateMenu" parameterType="com.example.demo.common.core.domain.SysMenu">
    update sys_menu
    <set>
      <if test="menuName != null and menuName != ''">menu_name = #{menuName},</if>
      <if test="parentId != null">parent_id = #{parentId},</if>
      <if test="orderNum != null">order_num = #{orderNum},</if>
      <if test="path != null and path != ''">path = #{path},</if>
      <if test="component != null">component = #{component},</if>
      <if test="query != null">`query` = #{query},</if>
      <if test="isFrame != null and isFrame != ''">is_frame = #{isFrame},</if>
      <if test="isCache != null and isCache != ''">is_cache = #{isCache},</if>
      <if test="menuType != null and menuType != ''">menu_type = #{menuType},</if>
      <if test="visible != null">visible = #{visible},</if>
      <if test="status != null">status = #{status},</if>
      <if test="perms !=null">perms = #{perms},</if>
      <if test="icon !=null and icon != ''">icon = #{icon},</if>
      <if test="remark != null and remark != ''">remark = #{remark},</if>
      <if test="updateBy != null and updateBy != ''">update_by = #{updateBy},</if>
      update_time = sysdate()
    </set>
    where menu_id = #{menuId}
  </update>

  <insert id="insertMenu" parameterType="com.example.demo.common.core.domain.SysMenu">
    insert into sys_menu(
    <if test="menuId != null and menuId != 0">menu_id,</if>
    <if test="parentId != null and parentId != 0">parent_id,</if>
    <if test="menuName != null and menuName != ''">menu_name,</if>
    <if test="orderNum != null">order_num,</if>
    <if test="path != null and path != ''">path,</if>
    <if test="component != null and component != ''">component,</if>
    <if test="query != null and query != ''">`query`,</if>
    <if test="isFrame != null and isFrame != ''">is_frame,</if>
    <if test="isCache != null and isCache != ''">is_cache,</if>
    <if test="menuType != null and menuType != ''">menu_type,</if>
    <if test="visible != null">visible,</if>
    <if test="status != null">status,</if>
    <if test="perms !=null and perms != ''">perms,</if>
    <if test="icon != null and icon != ''">icon,</if>
    <if test="remark != null and remark != ''">remark,</if>
    <if test="createBy != null and createBy != ''">create_by,</if>
    create_time
    )values(
    <if test="menuId != null and menuId != 0">#{menuId},</if>
    <if test="parentId != null and parentId != 0">#{parentId},</if>
    <if test="menuName != null and menuName != ''">#{menuName},</if>
    <if test="orderNum != null">#{orderNum},</if>
    <if test="path != null and path != ''">#{path},</if>
    <if test="component != null and component != ''">#{component},</if>
    <if test="query != null and query != ''">#{query},</if>
    <if test="isFrame != null and isFrame != ''">#{isFrame},</if>
    <if test="isCache != null and isCache != ''">#{isCache},</if>
    <if test="menuType != null and menuType != ''">#{menuType},</if>
    <if test="visible != null">#{visible},</if>
    <if test="status != null">#{status},</if>
    <if test="perms !=null and perms != ''">#{perms},</if>
    <if test="icon != null and icon != ''">#{icon},</if>
    <if test="remark != null and remark != ''">#{remark},</if>
    <if test="createBy != null and createBy != ''">#{createBy},</if>
    sysdate()
    )
  </insert>

  <delete id="deleteMenuById" parameterType="java.lang.Long">
	    delete from sys_menu where menu_id = #{menuId}
	</delete>
</mapper>